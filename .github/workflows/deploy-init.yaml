on:
  push:
    branches:
      - development
  pull_request:
    types: [closed]
    branches:
      - development

env:
  NODE_VERSION: 16.15.0
  IP_ADDRESS: "157.245.243.37"

jobs:
  test-application:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run and Build Application
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'yarn'
      - run: |
          yarn cache clean
          yarn
          yarn build

  create-deployment-artifacts:
      needs: test-application
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Build App Artifacts
          env:
            GITHUB_SHA: ${{ github.sha }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{env.NODE_VERSION}}
            cache: 'yarn'
        - run: |
            touch .env
            echo RELEASE_VERSION=${GITHUB_REF} >> .env
            echo GITHUB_SHA=${GITHUB_SHA} >> .env
            yarn cache clean
            yarn
            yarn build
            cp .env .output/server/.env
            tar -czf "${GITHUB_SHA}".tar.gz .output
            
        - name: Store app-artifacts for distribution
          uses: actions/upload-artifact@v3
          with:
            name: app-artifacts
            path: ${{ github.sha }}.tar.gz

  prepare-release-on-servers:
    needs: create-deployment-artifacts
    name: "Prepare release on server"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-artifacts
      - uses: actions/download-artifact@v3
        
      - name: Upload app-artifacts
        uses: appleboy/scp-action@master
        with:
          host: ${{env.IP_ADDRESS}}
          port: "22"
          username: "root"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ github.sha }}.tar.gz
          target: /var/www/kaziquest_dev_frontend/artifacts

      - name: Extract archive and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{env.IP_ADDRESS}}
          username: "root"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: "22"
          envs: GITHUB_SHA
          script: |
            mkdir -p "/var/www/kaziquest_dev_frontend/releases/${GITHUB_SHA}"
            tar xzf /var/www/kaziquest_dev_frontend/artifacts/${GITHUB_SHA}.tar.gz -C "/var/www/kaziquest_dev_frontend/releases/${GITHUB_SHA}"
            rm -rf /var/www/kaziquest_dev_frontend/artifacts/${GITHUB_SHA}.tar.gz
  
  activate-release:
    name: "Activate release"
    runs-on: ubuntu-latest
    needs: prepare-release-on-servers
    steps:
      - name: Activate Release
        uses: appleboy/ssh-action@master
        env:
          RELEASE_PATH: /var/www/kaziquest_dev_frontend/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: /var/www/kaziquest_dev_frontend/live
        with:
          host: ${{env.IP_ADDRESS}}
          username: "root"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: "22"
          envs: RELEASE_PATH,ACTIVE_RELEASE_PATH
          script: |
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
            systemctl restart kaziquest_dev_frontend
            chown -R www-data:www-data ${RELEASE_PATH}

  clean-up:
    name: "Clean up old versions"
    runs-on: ubuntu-latest
    needs: activate-release
    steps:
      - name: clean up old releases
        uses: appleboy/ssh-action@master
        with:
          host: ${{env.IP_ADDRESS}}
          username: "root"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: "22"
          script: |
            cd /var/www/kaziquest_dev_frontend/releases && ls -t -1 | tail -n +4 | xargs rm -rf
            cd /var/www/kaziquest_dev_frontend/artifacts && rm -rf *
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: app-artifacts
